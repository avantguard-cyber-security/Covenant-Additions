- Author:
    Name: Jann
    Handle: '@jannlemm0913'
    Link: https://avantguard.io
  Name: ListExports
  Aliases: []
  Description: List all the exports of a DLL loaded in the current process.
  Help: >-
    List all the exports of a DLL loaded in the current process using SharpSploit and DInvoke, walking the PEB of the module to find exported functions.

    Code was taken from the example in https://thewover.github.io/Dynamic-Invoke/.
  Language: CSharp
  CompatibleDotNetVersions:
  - Net35
  - Net40
  Code: >-
    using System;

    using System.Linq;

    using System.Diagnostics;

    using SharpSploit.Execution;

    using SharpSploit.Execution.Injection;

    using System.Runtime.InteropServices;

    using DInvoke = SharpSploit.Execution.DynamicInvoke;


    public static class Task

    {
        public static string Execute(string DllName)
        {
            string output = "";
            try
            {
                IntPtr ModuleBase = DInvoke.Generic.GetPebLdrModuleEntry(DllName);

                IntPtr FunctionPtr = IntPtr.Zero;
                try
                {
                    Int32 PeHeader = Marshal.ReadInt32((IntPtr)(ModuleBase.ToInt64() + 0x3C));
                    Int16 OptHeaderSize = Marshal.ReadInt16((IntPtr)(ModuleBase.ToInt64() + PeHeader + 0x14));
                    Int64 OptHeader = ModuleBase.ToInt64() + PeHeader + 0x18;
                    Int16 Magic = Marshal.ReadInt16((IntPtr)OptHeader);
                    Int64 pExport = 0;
                    if (Magic == 0x010b)
                    {
                        pExport = OptHeader + 0x60;
                    }
                    else
                    {
                        pExport = OptHeader + 0x70;
                    }

                    Int32 ExportRVA = Marshal.ReadInt32((IntPtr)pExport);
                    Int32 OrdinalBase = Marshal.ReadInt32((IntPtr)(ModuleBase.ToInt64() + ExportRVA + 0x10));
                    Int32 NumberOfFunctions = Marshal.ReadInt32((IntPtr)(ModuleBase.ToInt64() + ExportRVA + 0x14));
                    Int32 NumberOfNames = Marshal.ReadInt32((IntPtr)(ModuleBase.ToInt64() + ExportRVA + 0x18));
                    Int32 FunctionsRVA = Marshal.ReadInt32((IntPtr)(ModuleBase.ToInt64() + ExportRVA + 0x1C));
                    Int32 NamesRVA = Marshal.ReadInt32((IntPtr)(ModuleBase.ToInt64() + ExportRVA + 0x20));
                    Int32 OrdinalsRVA = Marshal.ReadInt32((IntPtr)(ModuleBase.ToInt64() + ExportRVA + 0x24));

                    output += "Found " + NumberOfNames.ToString() + " exported functions in " + DllName + ":\n";

                    for (int i = 0; i < NumberOfNames; i++)
                    {
                        string FunctionName = Marshal.PtrToStringAnsi((IntPtr)(ModuleBase.ToInt64() + Marshal.ReadInt32((IntPtr)(ModuleBase.ToInt64() + NamesRVA + i * 4))));
                        output += " - " + FunctionName + "\n";
                    }
                }
                catch
                {
                    throw new InvalidOperationException("Failed to parse module exports.");
                }   
                return output;
            }
            catch (Exception e) { return e.GetType().FullName + ": " + e.Message + Environment.NewLine + e.StackTrace; }
        }
    }
  Compiled: false
  TaskingType: Assembly
  ReferenceSourceLibraries:
  - Name: SharpSploit
    Description: SharpSploit is a library for C# post-exploitation modules.
    Location: SharpSploit/SharpSploit/
    Language: CSharp
    CompatibleDotNetVersions:
    - Net35
    - Net40
    ReferenceAssemblies:
    - &o4
      Name: System.dll
      Location: net40/System.dll
      DotNetVersion: Net40
    - Name: System.ServiceProcess.dll
      Location: net40/System.ServiceProcess.dll
      DotNetVersion: Net40
    - Name: System.ServiceProcess.dll
      Location: net35/System.ServiceProcess.dll
      DotNetVersion: Net35
    - Name: System.Windows.Forms.dll
      Location: net40/System.Windows.Forms.dll
      DotNetVersion: Net40
    - Name: System.Windows.Forms.dll
      Location: net35/System.Windows.Forms.dll
      DotNetVersion: Net35
    - Name: System.Management.Automation.dll
      Location: net40/System.Management.Automation.dll
      DotNetVersion: Net40
    - Name: System.Management.Automation.dll
      Location: net35/System.Management.Automation.dll
      DotNetVersion: Net35
    - Name: System.Management.dll
      Location: net40/System.Management.dll
      DotNetVersion: Net40
    - Name: System.Management.dll
      Location: net35/System.Management.dll
      DotNetVersion: Net35
    - Name: System.IdentityModel.dll
      Location: net40/System.IdentityModel.dll
      DotNetVersion: Net40
    - Name: System.IdentityModel.dll
      Location: net35/System.IdentityModel.dll
      DotNetVersion: Net35
    - Name: System.DirectoryServices.Protocols.dll
      Location: net40/System.DirectoryServices.Protocols.dll
      DotNetVersion: Net40
    - Name: System.DirectoryServices.Protocols.dll
      Location: net35/System.DirectoryServices.Protocols.dll
      DotNetVersion: Net35
    - Name: System.DirectoryServices.dll
      Location: net40/System.DirectoryServices.dll
      DotNetVersion: Net40
    - Name: System.DirectoryServices.dll
      Location: net35/System.DirectoryServices.dll
      DotNetVersion: Net35
    - &o3
      Name: System.Core.dll
      Location: net40/System.Core.dll
      DotNetVersion: Net40
    - &o0
      Name: System.Core.dll
      Location: net35/System.Core.dll
      DotNetVersion: Net35
    - &o2
      Name: mscorlib.dll
      Location: net35/mscorlib.dll
      DotNetVersion: Net35
    - &o5
      Name: mscorlib.dll
      Location: net40/mscorlib.dll
      DotNetVersion: Net40
    - &o1
      Name: System.dll
      Location: net35/System.dll
      DotNetVersion: Net35
    - Name: System.XML.dll
      Location: net35/System.XML.dll
      DotNetVersion: Net35
    - Name: System.XML.dll
      Location: net40/System.XML.dll
      DotNetVersion: Net40
    EmbeddedResources: []
  ReferenceAssemblies:
  - *o0
  - *o1
  - *o2
  - *o3
  - *o4
  - *o5
  EmbeddedResources: []
  UnsafeCompile: false
  TokenTask: false
  Options:
  - Name: DllName
    Value: amsi.dll
    DefaultValue: ''
    Description: Name of the DLL that exports are shown for.
    SuggestedValues: []
    Optional: false
    DisplayInCommand: true
    FileOption: false
    GruntTaskId: 107
